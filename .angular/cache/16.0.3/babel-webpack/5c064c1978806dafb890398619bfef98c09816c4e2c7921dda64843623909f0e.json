{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nclass AddstudentComponent {\n  ngOnInit() {\n    this.form = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      fullname: new FormControl('', [Validators.required]),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      phonenumber: new FormControl(null, [Validators.required]),\n      password: new FormControl(null, [Validators.required]),\n      confirmpassword: new FormControl(null, [Validators.required])\n      //Validators.pattern('(`^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*]).{8,}$`)')\n    });\n  }\n}\n\nAddstudentComponent.ɵfac = function AddstudentComponent_Factory(t) {\n  return new (t || AddstudentComponent)();\n};\nAddstudentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddstudentComponent,\n  selectors: [[\"app-addstudent\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"formDetails\"], [3, \"formGroup\"], [\"id\", \"userData\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"placeholder\", \"USERNAME\", \"formControlName\", \"username\"], [\"type\", \"text\", \"id\", \"fullname\", \"name\", \"fullname\", \"placeholder\", \"FULLNAME\", \"formControlName\", \"fullname\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"placeholder\", \"EMAIL\", \"formControlName\", \"email\"]],\n  template: function AddstudentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"input\", 3)(4, \"input\", 4)(5, \"input\", 5);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AddstudentComponent };","map":{"version":3,"names":["FormControl","FormGroup","Validators","AddstudentComponent","ngOnInit","form","username","required","fullname","email","phonenumber","password","confirmpassword","selectors","decls","vars","consts","template","AddstudentComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\pc\\Projects\\week8\\assesment8\\src\\app\\addstudent\\addstudent.component.ts","C:\\Users\\pc\\Projects\\week8\\assesment8\\src\\app\\addstudent\\addstudent.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-addstudent',\n  templateUrl: './addstudent.component.html',\n  styleUrls: ['./addstudent.component.css']\n})\nexport class AddstudentComponent implements OnInit {\n  form!:FormGroup\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      username:new FormControl('',[Validators.required]),\n      fullname:new FormControl('',[Validators.required] ),\n      email:new FormControl(null ,[Validators.required,Validators.email]),\n      phonenumber:new FormControl(null,[Validators.required]),\n      password:new FormControl(null,[Validators.required]),\n      confirmpassword:new FormControl(null,[Validators.required])\n     //Validators.pattern('(`^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*]).{8,}$`)')\n    })\n  }\n\n}\n","\n        \n            <div class=\"formDetails\">\n                <form [formGroup]=\"form\">\n\n                    <div id=\"userData\" >\n                        <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"USERNAME\" formControlName=\"username\">\n                        <!-- <p class=\"error\" *ngIf=\"!form.get('username')?.valid && form.get ('username')?.touched\">Username is required*</p> -->\n                        <input type=\"text\" id=\"fullname\" name=\"fullname\" placeholder=\"FULLNAME\" formControlName=\"fullname\">\n                        <!-- <p class=\"error\" *ngIf=\"!form.get('fullname')?.valid && form.get ('fullname')?.touched\">fullname is required*</p> -->\n                        <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"EMAIL\" formControlName=\"email\">\n                        <!-- <p class=\"error\" *ngIf=\"!form.get('email')?.valid && form.get ('email')?.touched\">Email is required*</p> -->\n                    </div>\n                </form>\n            </div>\n        \n \n\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;AAEnE,MAKaC,mBAAmB;EAE9BC,QAAQA,CAAA;IACN,IAAI,CAACC,IAAI,GAAG,IAAIJ,SAAS,CAAC;MACxBK,QAAQ,EAAC,IAAIN,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACK,QAAQ,CAAC,CAAC;MAClDC,QAAQ,EAAC,IAAIR,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACK,QAAQ,CAAC,CAAE;MACnDE,KAAK,EAAC,IAAIT,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACK,QAAQ,EAACL,UAAU,CAACO,KAAK,CAAC,CAAC;MACnEC,WAAW,EAAC,IAAIV,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACK,QAAQ,CAAC,CAAC;MACvDI,QAAQ,EAAC,IAAIX,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACK,QAAQ,CAAC,CAAC;MACpDK,eAAe,EAAC,IAAIZ,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACK,QAAQ,CAAC;MAC3D;KACA,CAAC;EACJ;;;AAZWJ,mBAAmB,C;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB,C;QAAnBA,mBAAmB;EAAAU,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCNpBE,EAAA,CAAAC,cAAA,aAAyB;MAIbD,EAAA,CAAAE,SAAA,eAAmG;MAMvGF,EAAA,CAAAG,YAAA,EAAM;;;MATJH,EAAA,CAAAI,SAAA,GAAkB;MAAlBJ,EAAA,CAAAK,UAAA,cAAAN,GAAA,CAAAf,IAAA,CAAkB;;;;;;SDK3BF,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}